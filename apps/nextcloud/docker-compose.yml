version: "3.7"

services:
  nextcloud:
    container_name: nextcloud
    image: nextcloud:31.0.7-apache
    restart: unless-stopped
    ports:
      - ${APP_PORT}:80
    volumes:
      - ${APP_DATA_DIR}/data/nextcloud:/var/www/html
    environment:
      - POSTGRES_HOST=db-nextcloud
      - REDIS_HOST=redis-nextcloud
      - POSTGRES_PASSWORD=tipi
      - POSTGRES_USER=tipi
      - POSTGRES_DB=nextcloud
      - NEXTCLOUD_ADMIN_USER=${NEXTCLOUD_ADMIN_USER}
      - NEXTCLOUD_ADMIN_PASSWORD=${NEXTCLOUD_ADMIN_PASSWORD}
      - NEXTCLOUD_TRUSTED_DOMAINS=${APP_DOMAIN}
      - TRUSTED_PROXIES=172.16.0.0/12
      - OVERWRITEPROTOCOL=${APP_PROTOCOL:-http}
    depends_on:
      - db-nextcloud
      - redis-nextcloud
    networks:
      - tipi_main_network
    labels:
      traefik.enable: ${APP_EXPOSED}
      traefik.http.routers.{{RUNTIPI_APP_ID}}.rule: Host(`${APP_DOMAIN}`)
      traefik.http.routers.{{RUNTIPI_APP_ID}}.entrypoints: websecure
      traefik.http.routers.{{RUNTIPI_APP_ID}}.service: {{RUNTIPI_APP_ID}}
      traefik.http.routers.{{RUNTIPI_APP_ID}}.tls.certresolver: myresolver
      traefik.http.routers.{{RUNTIPI_APP_ID}}.middlewares: "{{RUNTIPI_APP_ID}},{{RUNTIPI_APP_ID}}_redirect,{{RUNTIPI_APP_ID}}-https"

      traefik.http.routers.{{RUNTIPI_APP_ID}}-http.rule: Host(`${APP_DOMAIN}`)
      traefik.http.routers.{{RUNTIPI_APP_ID}}-http.entrypoints: web
      traefik.http.routers.{{RUNTIPI_APP_ID}}-http.service: {{RUNTIPI_APP_ID}}
      traefik.http.routers.{{RUNTIPI_APP_ID}}-http.middlewares: "{{RUNTIPI_APP_ID}}-https@docker"

      traefik.http.services.{{RUNTIPI_APP_ID}}.loadbalancer.server.port: 80

      traefik.http.middlewares.{{RUNTIPI_APP_ID}}.headers.browserXSSFilter: "true"
      traefik.http.middlewares.{{RUNTIPI_APP_ID}}.headers.contentTypeNosniff: "true"
      traefik.http.middlewares.{{RUNTIPI_APP_ID}}.headers.stsIncludeSubdomains: "true"
      traefik.http.middlewares.{{RUNTIPI_APP_ID}}.headers.stsPreload: "true"
      traefik.http.middlewares.{{RUNTIPI_APP_ID}}.headers.stsSeconds: "155520011"
      traefik.http.middlewares.{{RUNTIPI_APP_ID}}.headers.customRequestHeaders.X-Forwarded-Proto: "https"

      traefik.http.middlewares.{{RUNTIPI_APP_ID}}_redirect.redirectregex.permanent: "true"
      traefik.http.middlewares.{{RUNTIPI_APP_ID}}_redirect.redirectregex.regex: "^https://(.*)/.well-known/(card|cal)dav"
      traefik.http.middlewares.{{RUNTIPI_APP_ID}}_redirect.redirectregex.replacement: "https://$${1}/remote.php/dav/"

      traefik.http.middlewares.{{RUNTIPI_APP_ID}}-https.redirectscheme.scheme: "https"

      runtipi.managed: "true"

  db-nextcloud:
    container_name: db-nextcloud
    image: postgres:14.2
    restart: on-failure
    volumes:
      - ${APP_DATA_DIR}/data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=tipi
      - POSTGRES_USER=tipi
      - POSTGRES_DB=nextcloud
    networks:
      - tipi_main_network
    labels:
      runtipi.managed: "true"

  redis-nextcloud:
    container_name: redis-nextcloud
    user: "1000:1000"
    image: redis:6.2.6
    restart: on-failure
    volumes:
      - "${APP_DATA_DIR}/data/redis:/data"
    networks:
      - tipi_main_network
    labels:
      runtipi.managed: "true"

  cron:
    image: nextcloud:31.0.7-apache
    restart: on-failure
    volumes:
      - ${APP_DATA_DIR}/data/nextcloud:/var/www/html
    entrypoint: /cron.sh
    depends_on:
      - db-nextcloud
      - redis-nextcloud
    networks:
      - tipi_main_network
    labels:
      runtipi.managed: "true"

networks:
  tipi_main_network:
    external: true

